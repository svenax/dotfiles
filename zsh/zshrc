autoload -U compinit && compinit
autoload -U promptinit && promptinit
autoload -U zmv

# Plugins =====================================================================

export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh
zplugs=()

zplug 'bric3/nice-exit-code'
zplug 'olivierverdier/zsh-git-prompt', use:'zshrc.sh' #, hook-build:'stack build && stack install'
zplug 'zsh-users/zsh-completions'
zplug 'zsh-users/zsh-syntax-highlighting'
zplug 'changyuheng/fz', defer:1
zplug 'rupa/z', use:z.sh
zplug check || zplug install
zplug load

# Configuration ===============================================================

setopt AUTO_LIST
setopt AUTO_MENU
setopt EXTENDED_HISTORY
setopt HIST_EXPAND
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt LIST_PACKED
setopt NO_BEEP
setopt PROMPT_SUBST
setopt SHARE_HISTORY

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' menu select=0
zstyle ':completion:*:complete:(cd|pushd):*' tag-order 'local-directories named-directories path-directories'
zstyle ":completion:*:descriptions" format "%B--- %d%b"
zstyle ':completion:*' group-name ''

# zmodload zsh/complist

HIST_STAMPS="yyyy-mm-dd"
HISTSIZE=10000
SAVEHIST=50000

alias hh=hstr
export HISTFILE=~/.zsh_history
export HH_CONFIG=hicolor
bindkey -s "\C-r" "\eqhstr\n"

bindkey '^[[A' up-line-or-search
bindkey '^[[B' down-line-or-search

NEWLINE=$'\n'
PWNL=$PASSWORD_SECRET$NEWLINE

export LANG=en_US.UTF-8
export DISPLAY=:0
export LC_ALL=en_US.UTF-8
export LC_COLLATE=se_SV.UTF-8
export LC_CTYPE=se_SV.UTF-8
export CLICOLOR=1
export LSCOLORS="gxfxcxdxbxegedabagacad"
export PAGER=less

export JAVA_HOME=$(/usr/libexec/java_home)
export XML_CATALOG_FILES=/usr/local/etc/xml/catalog

export ALTERNATE_EDITOR=''
export EDITOR='code -nw'

# Passwords and stuff. Not included in the repo!
source ~/dotfiles/private
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Aliases =====================================================================

alias '..'='cd ..'
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'

alias rg='rg -p'
alias ls='ls -GF'
alias ll='ls -l'
alias la='ls -a'
alias mkdir='mkdir -pv'
alias ssudo="echo '$PWNL'|sudo -p '' -kS"

alias brewup='brew update && echo -e "==> \033[1mOutdated brews\033[0m" && brew outdated && echo -e "==> \033[1mOutdated casks\033[0m" && brew cask outdated'
alias brewug='brew upgrade && brew cask upgrade'
alias phpxp='php -dzend_extension=${phpprefix}-xdebug/xdebug.so -dxdebug.profiler_enable=1 -dxdebug.profiler_output_dir=.'
alias phpxt='php -dzend_extension=${phpprefix}-xdebug/xdebug.so -dxdebug.auto_trace=1 -dxdebug.trace_format=1 -dxdebug.trace_output_dir=.'
alias phpxt-analyze='php ~/bin/tracefile-analyzer.php'

alias phpdebug='sudo ifconfig lo0 alias 172.16.123.1'

alias -g G='|rg'
alias -g L='|less -R'
alias -g NULL='> /dev/null 2>&1'

# Functions ===================================================================
function touchp()
{
  mkdir -p $(dirname "${1}") && touch "${1}"
}

function rp() {
  rg "$@" | less -FRX
}

# Copy my public key to a server via SSH
function ssh-copykey() {
  if [[ -z "$1" ]]; then
    echo "You need to enter a hostname in order to send your public key."
  else
    echo "* Copying SSH public key to server..."
    ssh ${1} "mkdir -p ~/.ssh && cat - >> ~/.ssh/authorized_keys" < ~/.ssh/id_rsa.pub
    echo "* All done."
  fi
}

# cd to the brew directory of the given package
function cdbrew() {
  cd $(brew --prefix $1)
}

# Kill processes listening to the given port
function killport() {
  lsof -i TCP:$1 | grep LISTEN | awk '{print $2}' | xargs kill -9
}

# Use fzf with z
unalias z 2> /dev/null
function z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
}

# Prompt ======================================================================

function preexec() {
  timer=${timer:-$SECONDS}
}

function precmd() {
  if [ $timer ]; then
    timer_show=$(($SECONDS - $timer))
    export RPROMPT='$(nice_exit_code) %F{3}${timer_show}s%f'
    unset timer
  fi
}

ZSH_PROMPT_EXIT_SIGNAL_PREFIX='%F{1}â¤» '
ZSH_PROMPT_EXIT_SIGNAL_SUFFIX='%f'

PROMPT='%F{6}%~%f $(git_super_status)%f${NEWLINE}%F{5}[%F{2}%*%F{5}]%f # '

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export NVM_DIR="${HOME}/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

path[1,0]=/usr/local/opt/bison/bin
